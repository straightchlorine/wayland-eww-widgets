#!/bin/bash

# credentials
api-id() {
    cat $HOME/.cache/weather/weather-credentials/key
}

city-id() {
    cat $HOME/.cache/weather/weather-credentials/city
}


# cache folders
## data
cache_directory="$HOME/.cache/weather"
cache_weather_city=${cache_directory}/weather-city
cache_weather_status=${cache_directory}/weather-status
cache_weather_temperature=${cache_directory}/weather-temperature
cache_weather_temperature_full=${cache_directory}/weather-temperature-full
cache_weather_felt_temperature=${cache_directory}/weather-felt-temperature
cache_weather_pressure=${cache_directory}/weather-pressure
cache_weather_humidity=${cache_directory}/weather-humidity
cache_weather_sunrise=${cache_directory}/weather-sunrise
cache_weather_sunset=${cache_directory}/weather-sunset
cache_weather_wind_speed=${cache_directory}/weather-wind-speed

## cosmetics
cache_weather_quote=${cache_directory}/weather-quote
cache_weather_colour=${cache_directory}/weather-colour
cache_weather_icon=${cache_directory}/weather-icon

# creting cache cache directory
if [[ ! -d "$cache_directory" ]]; then
    mkdir -p ${cache_directory}
    cd ${cache_directory}
    touch weather-city
    touch weather-status
    touch weather-temperature-full
    touch weather-felt-temperature
    touch weather-pressure
    touch weather-humidity
    touch weather-sunrise
    touch weather-sunset
    touch weather-wind-speed
    touch weather-quote
    touch weather-colour
    touch weather-icon
fi

# openweather credentials
KEY=$(api-id)
CITY_ID=$(city-id)

# extracting the data from the openweather api
extract_weather() {
    api_url="curl -sf 'api.openweathermap.org/data/2.5/weather?APPID=$KEY&id=$CITY_ID&units=metric'"
    api_output=$(eval $api_url)

    echo ${api_output}

    if [ ! -z "$api_output" ]; then
        #filtering needed data out of the response
        weather_city=$(echo $api_output | jq '.name' | sed 's/"//g')
        weather_temperature=$(echo $api_output | jq '.main.temp' | cut -d '.' -f 1)
        weather_temperature_full=$(echo $api_output | jq '.main.temp')
        weather_felt_temp=$(echo $api_output | jq '.main.feels_like')
        weather_pressure=$(echo $api_output | jq '.main.pressure')
        weather_humidity=$(echo $api_output | jq '.main.humidity')
        weather_wind_speed=$(echo $api_output | jq '.wind.speed')
        weather_icon=$(echo $api_output | jq -r '.weather[].icon' | head -1)
        weather_descrption=$(echo $api_output | jq -r '.weather[].description' | head -1)

        # setting the icons and adding the quotes
        if [ "$weather_icon" == "50d"  ]; then
			weather_icon=""
			weather_quote="Looks like it's going to be a misty day..."
			weather_colour="#7c6f64"
		elif [ "$weather_icon" == "50n"  ]; then
			weather_icon=""
			weather_quote="Forecast says the night will be misty..."
			weather_colour="#7c6f64"
		elif [ "$weather_icon" == "01d"  ]; then
			weather_icon=""
			weather_quote="It's going to be sunny... For now..."
			weather_colour="#ffea00"
		elif [ "$weather_icon" == "01n"  ]; then
			weather_icon=""
			weather_quote="The night's clear... Look at the stars..."
			weather_colour="#fbf1c7"
		elif [ "$weather_icon" == "02d"  ]; then
			weather_icon=" "
			weather_quote="It's quite cloudy..."
			weather_colour="#83a598"
		elif [ "$weather_icon" == "02n"  ]; then
			weather_icon=" "
			weather_quote="The night is quite cloudy... Stars might be in hiding..."
			weather_colour="#83a598"
		elif [ "$weather_icon" == "03d"  ]; then
			weather_icon=" "
			weather_quote="It's quite cloudy today..."
			weather_colour="#83a598"
		elif [ "$weather_icon" == "03n"  ]; then
			weather_icon=" "
			weather_quote="It's a cloudy night... The stars probably won't show themselves..."
			weather_colour="#83a598"
		elif [ "$weather_icon" == "04d"  ]; then
			weather_icon=""
			weather_quote="It's quite cloudy today..."
			weather_colour="#458588"
		elif [ "$weather_icon" == "04n"  ]; then
			weather_icon=""
			weather_quote="It's a cloudy night... The stars probably won't show themselves..."
			weather_colour="#458588"
		elif [ "$weather_icon" == "09d"  ]; then
			weather_icon=""
			weather_quote="It's a rainy day..."
			weather_colour="#427b58"
		elif [ "$weather_icon" == "09n"  ]; then
			weather_icon=""
			weather_quote="It will rain tonight..."
			weather_colour="#427b58"
		elif [ "$weather_icon" == "10d"  ]; then
			weather_icon=""
			weather_quote="It's a rainy day..."
			weather_colour="#689d6a"
		elif [ "$weather_icon" == "10n"  ]; then
			weather_icon=""
			weather_quote="It will rain tonight..."
			weather_colour="#689d6a"
		elif [ "$weather_icon" == "11d"  ]; then
			weather_icon=""
			weather_quote="Storm will come today..."
			weather_colour="#fabd2f"
		elif [ "$weather_icon" == "11n"  ]; then
			weather_icon=""
			weather_quote="Stormy night ahead..."
			weather_colour="#fabd2f"
		elif [ "$weather_icon" == "13d"  ]; then
			weather_icon=""
			weather_quote="It's going to snow today..."
			weather_colour="#fbf1c7"
		elif [ "$weather_icon" == "13n"  ]; then
			weather_icon=""
			weather_quote="It's going to snow tonight..."
			weather_colour="#fbf1c7"
		else 
			weather_icon=""
			weather_quote="Quite a strange day..."
			weather_colour="#fb4934"
		fi

        # saving the data to the cache
        echo "$weather_city" > ${cache_weather_city}
        echo "$weather_temperature" > ${cache_weather_temperature}
        echo "$weather_temperature_full" > ${cache_weather_temperature_full}
        echo "$weather_felt_temp" > ${cache_weather_felt_temperature}
        echo "$weather_pressure" > ${cache_weather_pressure}
        echo "$weather_humidity" > ${cache_weather_humidity}
        echo "$weather_wind_speed" > ${cache_weather_wind_speed}
        echo "$weather_icon" > ${cache_weather_icon}
        echo "$weather_descrption" > ${cache_weather_status}
        echo "$weather_colour" > ${cache_weather_colour}
        echo "$weather_quote" > ${cache_weather_quote}
    else
        echo "no weather." > ${cache_weather_status}
        echo "" > ${cache_weather_icon}
        echo -e "No weather : (" > ${cache_weather_quote}
        echo "" > ${cache_weather_temperature}
        echo "#32302f" > ${cache_weather_colour}
    fi
}

# interface
if [[ "$1" == "--status" ]]; then
    cat ${cache_weather_status}
elif [[ "$1" == "--data" ]]; then
    extract_weather
elif [[ "$1" == "--temp" ]]; then
    cat ${cache_weather_felt_temperature}
elif [[ "$1" == "--wpress" ]]; then
    cat ${cache_weather_pressure}
elif [[ "$1" == "--icon" ]]; then
    cat ${cache_weather_icon}
elif [[ "$1" == "--colour" ]]; then
    cat ${cache_weather_colour}
elif [[ "$1" == "--quote" ]]; then
    cat ${cache_weather_quote}
fi
